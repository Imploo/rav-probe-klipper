[gcode_macro GET_PROBE_SETTINGS]
description: Calculates the probe min/max/current coordinates
gcode: 
    {% set config = printer.configfile.settings %}
    # Find probe config in configfile
    {% if config["bltouch"] %}
        # bltouch section found
        {% set probe = config["bltouch"] %}
        {% set has_probe = True %}
    {% elif config["probe"] %}
        # probe section found
        {% set probe = config["probe"] %}
        {% set has_probe = True %}
    {% elif config["beacon"] %}
        # probe section found
        {% set probe = config["beacon"] %}
        {% set has_probe = True %}
    {% else %}
        # No probe or bltouch sections found
        RESPOND MSG="Failed to detect probe in configfile"
    {% endif %}
    {% if has_probe %}
        {% set stepperx = config["stepper_x"] %}
        {% set steppery = config["stepper_y"] %}
        {% set xmin = stepperx["position_min"] %} 
        {% set xmax = stepperx["position_max"] %} 
        {% set ymin = steppery["position_min"] %} 
        {% set ymax = steppery["position_max"] %}
        
        {% set xbed = params.BED_X | default(xmax) | float %}
        {% set ybed = params.BED_Y | default(ymax) | float %}
        {% set margin = params.MARGIN | default(10) | float %}

        {% set xprobe = probe["x_offset"] %}
        {% set yprobe = probe["y_offset"] %}

        {% set xprobemin = stepperx["position_min"]|float + probe["x_offset"]|float %} 
        {% set xprobemax = stepperx["position_max"]|float + probe["x_offset"]|float %} 
        {% set yprobemin = steppery["position_min"]|float + probe["y_offset"]|float %} 
        {% set yprobemax = steppery["position_max"]|float + probe["y_offset"]|float %}

        {% set xsafe = (xbed / 2) - xprobe %}
        {% set ysafe = (ybed / 2) - yprobe %}

        RESPOND MSG="[safe_z_home]"
        RESPOND MSG="home_xy_position: {xsafe | int},{ysafe | int}"

        {% set xmin_bl = (xprobe + xmin, margin) | max %}
        {% set xmax_bl = (xprobe + xmax, xbed - margin) | min %}
        {% set ymin_bl = (yprobe + ymin, margin) | max %}
        {% set ymax_bl = (yprobe + ymax, ybed - margin) | min %}

        RESPOND MSG="[bed_mesh]"
        RESPOND MSG="mesh_min: {xmin_bl | int},{ymin_bl | int}"
        RESPOND MSG="mesh_max: {xmax_bl | int},{ymax_bl | int}"

        {% if config["z_tilt"] %}
            {% set z_pos_ar = config["z_tilt"]["z_positions"] %}

            RESPOND MSG="[z_tilt]"
            RESPOND MSG="points:"
            {% for z_pos in z_pos_ar %}
                {% set xpoint = ((z_pos[0] - xprobe, margin - xprobe) | max, xbed - margin - xprobe) | min %}
                {% set xlimit = ((xpoint, xmin) | max, xmax) | min %}
                
                {% set ypoint = ((z_pos[1] - yprobe, margin - yprobe) | max, ybed - margin - yprobe) | min %}
                {% set ylimit = ((ypoint, ymin) | max, ymax) | min %}
                RESPOND MSG="    {xlimit | int},{ylimit| int}"
            {% endfor %}

        {% endif %}

        # check if printer homed
        {% if "xyz" in printer.toolhead.homed_axes %} 
            {% set curprobex = printer.toolhead.position.x|float + probe["x_offset"]|float %} 
            {% set curprobey = printer.toolhead.position.y|float + probe["y_offset"]|float %} 
            RESPOND MSG="Current PROBE position X={curprobex} Y={curprobey}"
        {% endif %}
    {% endif %}
